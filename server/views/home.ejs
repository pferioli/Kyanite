<%- include ("partials/header") %>

<main class="site-content">

  <div class="fixed-action-btn">
    <a id="menu" class="btn-floating btn-large green"><i class="large material-icons">mode_edit</i></a>
    <ul>
      <li>
        <a class="btn-floating purple darken-3" id="btn_new_text_card"><i class="material-icons">chat</i></a>
      </li>
      <li>
        <a class="btn-floating yellow darken-1" id="btn_new_multiple_card"><i class="material-icons">check_box</i></a>
      </li>
      <li>
        <a class="btn-floating green" id="btn_new_single_card"><i class="material-icons">radio_button_checked</i></a>
      </li>
      <li>
        <a class="btn-floating brown darken-2" id="btn_save_survey"><i class="material-icons">save</i></a>
      </li>
      <li>
        <a class="btn-floating blue" id="btn_get_link"><i class="material-icons">link</i></a>
      </li>
      <li>
        <a class="btn-floating red" id="btn_publish_survey"><i class="material-icons">cloud_upload</i></a>
      </li>
    </ul>
  </div>

  <div id="tap-target-create" class="tap-target green lighten-4" data-target="menu">
    <div class="tap-target-content">
      <h5>Bievenido a Kyanite</h5>
      <p>
        En la barra encontrar√° todas las funciones necesarias para comenzar a
        usar el sistema
      </p>
    </div>
  </div>

  <button onclick="start()">Start</button> Press the "Start" to begin.
  <div id="logElem" style="margin: 6px 0"></div>
  <button onclick="stop()">Stop</button> "Stop" to finish.

</main>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    M.TapTarget.init(document.querySelectorAll(".tap-target"), {}); //{onOpen: tapOnOpenCallback, onClose: tapOnCloseCallback});
    M.TapTarget.getInstance(
      document.getElementById("tap-target-create")
    ).open();
  });
</script>

<%- include ("partials/footer") %>

<script>

  //var userid = htmlDecode("<%= locals.user.id %>");

  let eventSource;

  function start() { // when "Start" button pressed
    if (!window.EventSource) {
      // IE or an old browser
      alert("The browser doesn't support EventSource.");
      return;
    }

    eventSource = new EventSource('sse');  //+ userid);

    eventSource.onopen = function (e) {
      log("Event: open");
    };

    eventSource.onerror = function (e) {
      log("Event: error");
      if (this.readyState == EventSource.CONNECTING) {
        log(`Reconnecting (readyState=${this.readyState})...`);
      } else {
        log("Error has occured.");
      }
    };

    eventSource.addEventListener('retry', function (e) {
      log("Event: retry, data: " + e.data);
    });

    eventSource.onmessage = function (e) {
      log("Event: message, data: " + e.data);
    };
  }

  function stop() { // when "Stop" button pressed
    eventSource.close();
    log("eventSource.close()");
  }

  function log(msg) {
    logElem.innerHTML += msg + "<br>";
    document.documentElement.scrollTop = 99999999;
  }
</script>