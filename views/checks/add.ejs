<%- include ("../partials/header") %>

<main class="site-content">
    <div class="container" style="margin-top: 50px;">
        <form class="col s12" method="post" action='/checks/new/<%=data.client.id%>'>
            <div class="card">
                <div class="card-content">
                    <span class="card-title">Crear una nuevo cheque</span>
                    <div class="row" style="margin-top: 20px;">
                        <div class="input-field col s9">
                            <i class="material-icons prefix">location_city</i>
                            <input id="client" name="client" type="text" value="<%=data.client.name%> [<%=data.client.internalCode%>]" disabled />
                            <label for="name">Nombre del Barrio</label>
                            <input type="hidden" name="clientId" id="clientId" value="<%=data.client.id%>" />
                        </div>
                        <div class="input-field col s3">
                            <i class="material-icons prefix">calendar_today</i>
                            <input id="billingPeriod" name="billingPeriod" type="text" value="" disabled />
                            <label for="billingPeriod">Período de Liquidación</label>
                            <input type="hidden" name="billingPeriodId" id="billingPeriodId" value="" />
                        </div>
                    </div>

                    <div class="row">
                        <!-- <div class="input-field col s6">
                            <i class="material-icons prefix">account_balance</i>
                            <select id="bankSelect" required>
                                <option value="0" disabled selected>Seleccione un banco</option>
                                <%# for(var i=0; i < data.banks.length; i++) { %>
                                <option value="<%#=data.banks[i].id%>"><%#= data.banks[i].name%> [<%#=data.banks[i].code%>]</option>
                                <%# } %>
                            </select>
                            <label>Banco</label>
                            <input type="hidden" name="bankId" id="bankId" />
                        </div> -->
                        <div id="autocompleteInput" class="input-field col s6" autocomplete="off">
                            <i class="material-icons prefix">account_balance</i>
                            <input type="text" id="autocomplete-input" class="autocomplete" required placeholder="puede buscar por nombre o por codigo, mínimo 3 letras">
                            <label for="autocomplete-input">Seleccione un banco</label>
                            <input type="hidden" name="bankId" id="bankId" value="" />
                        </div>

                        <div class="input-field col s4">
                            <i class="material-icons prefix">money</i>
                            <input id="checkNumber" name="checkNumber" type="text" value="" required />
                            <label for="checkNumber">Número de Cheque</label>
                        </div>
                        <div class="input-field col s2">
                            <i class="material-icons prefix">monetization_on</i>
                            <input id="amount" name="amount" type="number" min="0.00" step="0.01" class="validate" required />
                            <label for="amount">Importe</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="input-field col s2">
                            <i class="material-icons prefix">date_range</i>
                            <input type="text" class="datepicker" id="dtpEmissionDate" name="dtpEmissionDate" required>
                            <label for="dtpEmissionDate">Fecha Emisión</label>
                            <input type="hidden" name="emissionDate" id="emissionDate" />
                        </div>
                        <div class="input-field col s2">
                            <i class="material-icons prefix">date_range</i>
                            <input type="text" class="datepicker" id="dtpPaymentDate" name="dtpPaymentDate" required>
                            <label for="dtpPaymentDate">Fecha Pago</label>
                            <input type="hidden" name="paymentDate" id="paymentDate" />
                        </div>

                        <div class="input-field col s8">
                            <i class="material-icons prefix">comments</i>
                            <textarea id="comments" name="comments" class="materialize-textarea"></textarea>
                            <label for="comments">Comentarios</label>
                        </div>
                    </div>
                </div>

                <div class="card-action right-align">
                    <button id="add_button" type='submit' class="waves-effect waves-light btn green" disabled><i class="material-icons right">save</i>Guardar</button>
                    <button action="action" onclick="window.history.go(-1); return false;" type="submit" value="Cancel" class="waves-effect waves-light btn red" style="margin-left: 10px;"><i class="material-icons right">cancel</i>Cancelar</button>
                </div>
            </div>
        </form>
    </div>
</main>

<%- include ("../partials/footer") %>

<%- include ("../partials/modals/billingPeriod.ejs") %>

<script type="text/javascript" src="/javascripts/billingPeriods.js"></script>
<script type="text/javascript" src="/javascripts/checks.js"></script>

<script>

    document.addEventListener("DOMContentLoaded", async function () {
        
        var elems = document.querySelectorAll("select");
        var instances = M.FormSelect.init(elems, {});
        
        elems = document.querySelectorAll('.modal');
        instances = M.Modal.init(elems, {});

        // document.getElementById("bankSelect").addEventListener('change', (event) => {
        //     document.getElementById("bankId").value = event.target.value;
        // });

        M.Datepicker.init(document.querySelectorAll('.datepicker'), {
            format: 'dd/mm/yyyy',
            autoClose: true,
            onOpen: function (e) {
                var that = this;
                that.hasEvent = false;
                this.cancelBtn.addEventListener('click', Cancel.bind(that))
                this.doneBtn.addEventListener('click', Done.bind(that))
            },
            onClose: function (e) {
                var that = this;
                this.cancelBtn.removeEventListener('click', Cancel.bind(that))
                this.doneBtn.removeEventListener('click', Done.bind(that))
            },
            onSelect: function (selectedDate) {
                if (this.date) {
                    if (this.el.id === 'dtpEmissionDate') {
                        document.getElementById('emissionDate').value = this.date.toISOString();
                    };
                    if (this.el.id === 'dtpPaymentDate') {
                        document.getElementById('paymentDate').value = this.date.toISOString();
                    };
                }
            }
        });

        M.CharacterCounter.init(document.getElementById("comments"));

        getActiveBillingPeriod(htmlDecode("<%=data.client.id%>"));

        //Autocomplete para los bancos...

        let data = {};

        const banks = await getBanks();

        for (i = 0; i < banks.length; i++) {
            data[`${banks[i].name} (${banks[i].code}) [${banks[i].id}]`] = null;
        }
        elems = document.querySelectorAll('.autocomplete');

        var instances = M.Autocomplete.init(elems, {
            minLength: 3, data: data,
            onAutocomplete: function (e) {
                var matches = e.match(/\[(.*?)\]/);
                if (matches)
                    document.getElementById('bankId').value = matches[1];
                else
                    document.getElementById('bankId').value = '';

                M.toast({ html: 'se ha seleccionado el banco con ID #' + matches[1] });
            }
        });

        document.getElementById("autocompleteInput").addEventListener('input', function (e) {
            document.getElementById('bankId').value = '';
        });

    });

    function Cancel() {
        if (!this.hasEvent) {
            this.hasEvent = true;
            console.log('Clicked on cancel btn:', this.cancelBtn);
        }
    }
    function Done() {
        if (!this.hasEvent) {
            this.hasEvent = true;
            console.log('Clicked on done btn:', this.doneBtn);
            if (this.date) {
                if (this.el.id === 'dtpEmissionDate') {
                    document.getElementById('emissionDate').value = this.date.toISOString();
                };
                if (this.el.id === 'dtpPaymentDate') {
                    document.getElementById('paymentDate').value = this.date.toISOString();
                };
            }
        }
    }


</script>