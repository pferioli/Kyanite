<style>
    table {
        margin-left: auto;
        margin-right: auto;
    }
</style>

<%- include ("../partials/header") %>

<main class="site-content">

    <center>
        <%- include ("../partials/alerts") %>
    </center>

    <div class="container" style="margin-top: 50px;">
        <div class="card">
            <div class="card-content">
                <span class="card-title">Administración de grupo de cuentas e imputaciones contables</span>
                
                <div class="row" style="margin-top: 20px;">
             
                    <div class="input-field col s6">
                        <i class="material-icons prefix">point_of_sale</i>
                            <select id="accountingGroupSelect">                                
                                <option value="" disabled selected>Seleccione un grupo</option>
                                <% for(var i=0; i < data.groups.length; i++) { %>                                    
                                    <option value="<%=data.groups[i].id%>"><%= data.groups[i].name %></option>
                                <% } %>
                            </select>
                            <label>Grupo de Cuentas</label>
                            <input type="hidden" name="accountingGroupId" id="accountingGroupId" />
                    </div>
                    
                    <div class="input-field col s6" style="text-align: center; display:inline-block; padding-top: 5px !important;">
                        <a class="waves-effect waves-light btn green" onClick='addGroup();' style="margin-right: 10px;"><i class="material-icons left">add</i>Agregar</a>
                        <a class="waves-effect waves-light btn blue" onClick='editGroup();' style="margin-right: 10px;"><i class="material-icons left">edit</i>Editar</a>
                        <a class="waves-effect waves-light btn red" onclick='deleteGroup();'><i class="material-icons left">delete</i>Deshabilitar</a>
                   </div>

                </div>

                <div class="row" >
                    <div class="col s12">
                        <a class="waves-effect waves-light btn green" onClick="addNewImputationAccount();"><i class="material-icons left">add</i>Agregar imputación contable al grupo</a>
                        <a class="waves-effect waves-light btn blue" onClick="openInNewTab('/accountingImputations/download');" style="margin-left: 10px;">
                            <i class="material-icons left">file_download</i>Descargar listado completo</a>
                    </div>
                </div>
                    
                <div class="row" style="margin-top: 20px;">
                    <div class="col s12">
                        <table id="tableAccountingImputations" class="table centered_table" style="width: 90% !important;">
                            <thead>
                                <tr>
                                    <th style="width: 5%;" data-id="type">ID</th>
                                    <th style="width: 80%;" data-id="type">Imputación Contable</th>
                                    <th style="width: 15%; text-align:left">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>                    
            </div>
        </div>
    </div>


<%- include ("./modals/editGroup.ejs") %>
<%- include ("./modals/newGroup.ejs") %>
<%- include ("./modals/deleteGroup.ejs") %>

<%- include ("./modals/newImputation.ejs") %>
<%- include ("./modals/editImputation.ejs") %>
<%- include ("./modals/deleteImputation.ejs") %>

</main>

<%- include ("../partials/footer") %>

<script type="text/javascript" src="/javascripts/accountingImputations.js"></script>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        var elems = document.querySelectorAll("select");
        var instances = M.FormSelect.init(elems, {});

        elems = document.querySelectorAll(".modal");
        instances = M.Modal.init(elems, {})

        const groupId = htmlDecode("<%=data.groupId%>");

        if(groupId !== ''){
            const accountingGroupSelect = document.getElementById('accountingGroupSelect');
            accountingGroupSelect.value = groupId;
            M.FormSelect.init(accountingGroupSelect, {});

            populateImputations(groupId);
        }
    });

    let accountingGroupSelect = document.getElementById("accountingGroupSelect").onchange = async function (evt) {            
        populateImputations(evt.target.value);
    };

    function openInNewTab(url) {
        var redirectWindow = window.open(url, '_blank');
        redirectWindow.location;
    };

    async function populateImputations(groupId) {

        document.getElementById("accountingGroupId").value = groupId;
            
        const accountingImputations = await getaccountingImputationsbyGroup(groupId);

        var tableRef = document.getElementById('tableAccountingImputations').getElementsByTagName('tbody')[0];
        tableRef.innerHTML="";

        for (const accountingImputation of accountingImputations) {
            addRow(accountingImputation.id, accountingImputation.name);
        }
    }

    function addRow(id, name) {

        var tableRef = document.getElementById('tableAccountingImputations').getElementsByTagName('tbody')[0];

        var newRow = tableRef.insertRow(-1);

        newRow.insertCell(0).appendChild(document.createTextNode(id));
        newRow.insertCell(1).appendChild(document.createTextNode(name));

        newRow.insertCell(2).innerHTML = '<a id="buttonEdit" class="btn-flat btn-small waves-effect waves-light" data-id="' + newRow.rowIndex + '" ' +
                                         'onClick=editAccountingImputationItem(this)><i class="material-icons">edit</i></a>' + 
                                         ' <a id="buttonDelete" class="btn-flat btn-small waves-effect waves-light" data-id="' + newRow.rowIndex + '" ' +
                                         'onClick=deleteAccountingImputationItem(this)><i class="material-icons">delete</i></a>'
    }

    //GROUPS

    function addGroup(){
        var modal = M.Modal.getInstance(document.getElementById('modalNewGroup')).open();
    }

    function editGroup(){      
        
        const accountingGroupId = document.getElementById('accountingGroupId');  
        
        if(accountingGroupId.value==="") return;

        const accountingGroupSelect = document.getElementById('accountingGroupSelect');        
        const accountingGroupName = accountingGroupSelect.options[accountingGroupSelect.selectedIndex].text;
        document.getElementById('modalEditGroupName').value = accountingGroupName;
        document.getElementById('modalEditGroupId').value = accountingGroupId.value;

        var modal = M.Modal.getInstance(document.getElementById('modalEditGroup')).open();
    }

    function deleteGroup(){

        const accountingGroupId = document.getElementById('accountingGroupId');  

        if(accountingGroupId.value==="") return;

        const accountingGroupSelect = document.getElementById('accountingGroupSelect');        
        const accountingGroupName = accountingGroupSelect.options[accountingGroupSelect.selectedIndex].text;        
        document.getElementById('modalDeleteGroupName').value = accountingGroupName;
        document.getElementById('modalDeleteGroupId').value = accountingGroupId.value;

        var modal = M.Modal.getInstance(document.getElementById('modalDeleteGroup')).open();
    }

    //IMPUTATION ACCOUNTS

    function addNewImputationAccount(){
        
        const accountingGroupId = document.getElementById('accountingGroupId');  

        if(accountingGroupId.value==="") return;

        document.getElementById('modalNewImputationGroupId').value = accountingGroupId.value;

        var modal = M.Modal.getInstance(document.getElementById('modalNewImputation')).open();
    }


    function editAccountingImputationItem(button){
    
        var row = button.closest("TR");
        
        const accountImputationId = parseInt(row.cells[0].textContent);

        document.getElementById('modalEditImputationId').value = accountImputationId;
        document.getElementById('modalEditImputationName').value = row.cells[1].textContent;

        var modal = M.Modal.getInstance(document.getElementById('modalEditImputation')).open();
    }

    
    function deleteAccountingImputationItem (button){
        
        var row = button.closest("TR");
        
        const accountImputationId = parseInt(row.cells[0].textContent);

        document.getElementById('modalDeleteImputationId').value = accountImputationId;
        document.getElementById('modalDeleteImputationName').value = row.cells[1].textContent;
        
        var modal = M.Modal.getInstance(document.getElementById('modalDeleteImputation')).open();    }

</script>
